[gd_scene load_steps=28 format=2]

[ext_resource path="res://game/disco/disco_overview/DiscoLight.gd" type="Script" id=1]
[ext_resource path="res://game/disco/disco_overview/background.png" type="Texture" id=2]
[ext_resource path="res://game/bugs/bug_queen/BugQueen.tscn" type="PackedScene" id=3]
[ext_resource path="res://game/bugs/nose_bug/NoseBug.tscn" type="PackedScene" id=4]
[ext_resource path="res://game/bugs/bug_pack/BugPack.tscn" type="PackedScene" id=5]
[ext_resource path="res://game/bugs/doctor_bug/DoctorBug.tscn" type="PackedScene" id=6]
[ext_resource path="res://game/bugs/bug_bunny/BugBunny.tscn" type="PackedScene" id=7]
[ext_resource path="res://game/bugs/moskito/Moskito.tscn" type="PackedScene" id=8]
[ext_resource path="res://game/bugs/light_bug/LightBug.tscn" type="PackedScene" id=9]
[ext_resource path="res://fonts/Indie_Flower/IndieFlower-Regular.ttf" type="DynamicFontData" id=10]
[ext_resource path="res://game/score_screen/ScoreScreen.gd" type="Script" id=11]
[ext_resource path="res://game/bugs/chandelier_bug/ChandelierBUg.tscn" type="PackedScene" id=12]
[ext_resource path="res://game/ui/images/final_score.png" type="Texture" id=13]
[ext_resource path="res://game/bugs/Bug_Ant/BugAnt.tscn" type="PackedScene" id=14]
[ext_resource path="res://game/bugs/Bug_Cute/BugCute.tscn" type="PackedScene" id=15]
[ext_resource path="res://game/bugs/Bug_Vamp/Vamp.tscn" type="PackedScene" id=16]
[ext_resource path="res://game/ui/images/menu.png" type="Texture" id=17]
[ext_resource path="res://game/ui/images/menu_pressed.png" type="Texture" id=18]
[ext_resource path="res://game/score_screen/BugbookEntry.tscn" type="PackedScene" id=19]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;


void fragment() {

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=34]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;


uniform vec2 position = vec2(0.3);
uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform float speed = 1.0;
uniform float ray1_offset = 1.3;
uniform float ray2_offset = 2.4;
uniform float ray3_offset = 2.6;
uniform float ray4_offset = 3.1;


mat2 rotate(float _angle) {
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend) {
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment() {
	float rotation = TIME * speed / 2.0;
	float angle_ray1 = mod(ray1_offset + rotation, 3.14159);
	float angle_ray2 = mod(ray2_offset + rotation, 3.14159);
	float angle_ray3 = mod(ray3_offset + rotation, 3.14159);
	float angle_ray4 = mod(ray4_offset + rotation, 3.14159);

	vec2 offset = UV - position;
	float angle_current = acos((offset / length(offset)).x);


	float dist = abs(angle_ray1 - angle_current);
	dist = min(dist, abs(angle_ray2 - angle_current));
	dist = min(dist, abs(angle_ray3 - angle_current));
	dist = min(dist, abs(angle_ray4 - angle_current));

	if (dist > 3.14159 / 2.0) {
		dist = 3.14159 - dist;
	}

	vec3 shine = dist * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;

	COLOR = vec4(shine, 0.1 - dist * dist * 120.0);
	//COLOR.a = 0.5;


}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 34 )
shader_param/position = Vector2( 0, 0 )
shader_param/color = Color( 1, 0.67, 0.6755, 0.8 )
shader_param/speed = 2.0
shader_param/ray1_offset = 1.3
shader_param/ray2_offset = 2.4
shader_param/ray3_offset = 2.6
shader_param/ray4_offset = 3.1

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 34 )
shader_param/position = Vector2( 1, 0 )
shader_param/color = Color( 0, 0.811765, 1, 1 )
shader_param/speed = -1.0
shader_param/ray1_offset = 1.3
shader_param/ray2_offset = 2.4
shader_param/ray3_offset = 2.6
shader_param/ray4_offset = 3.1

[sub_resource type="Shader" id=33]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;


uniform vec2 position = vec2(0.3);
uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform float speed = 1.0;
uniform float ray1_offset = 1.3;
uniform float ray2_offset = 2.4;
uniform float ray3_offset = 2.6;
uniform float ray4_offset = 3.1;


mat2 rotate(float _angle) {
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend) {
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment() {
	float rotation = TIME * speed / 2.0;
	float angle_ray1 = mod(ray1_offset + rotation, 3.14159);
	float angle_ray2 = mod(ray2_offset + rotation, 3.14159);
	float angle_ray3 = mod(ray3_offset + rotation, 3.14159);
	float angle_ray4 = mod(ray4_offset + rotation, 3.14159);

	vec2 offset = UV - position;
	float angle_current = acos((offset / length(offset)).x);


	float dist = abs(angle_ray1 - angle_current);
	dist = min(dist, abs(angle_ray2 - angle_current));
	dist = min(dist, abs(angle_ray3 - angle_current));
	dist = min(dist, abs(angle_ray4 - angle_current));

	if (dist > 3.14159 / 2.0) {
		dist = 3.14159 - dist;
	}

	vec3 shine = dist * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;

	COLOR = vec4(shine, 0.1 - dist * dist * 120.0);
	//COLOR.a = 0.5;


}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 33 )
shader_param/position = Vector2( 0.8, 0.3 )
shader_param/color = Color( 1, 0.560784, 0, 0.941176 )
shader_param/speed = 2.0
shader_param/ray1_offset = 1.3
shader_param/ray2_offset = 2.4
shader_param/ray3_offset = 2.6
shader_param/ray4_offset = 3.1

[sub_resource type="DynamicFont" id=8]
size = 96
font_data = ExtResource( 10 )

[node name="Node2D" type="Node2D"]
script = ExtResource( 11 )

[node name="CanvasLayer2" type="CanvasLayer" parent="."]
layer = -4

[node name="TextureRect" type="TextureRect" parent="CanvasLayer2"]
modulate = Color( 0.945098, 0.619608, 1, 1 )
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 2 )
expand = true
stretch_mode = 7
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DiscoLights" type="ColorRect" parent="CanvasLayer2"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.192157, 0.192157, 0.192157, 1 )
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DiscoLights2" type="ColorRect" parent="CanvasLayer2"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.192157, 0.192157, 0.192157, 1 )
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DiscoLights3" type="ColorRect" parent="CanvasLayer2"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.192157, 0.192157, 0.192157, 1 )
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PartyAudience" type="Node2D" parent="."]
position = Vector2( 26.9695, 410.536 )

[node name="BugPack" parent="PartyAudience" instance=ExtResource( 5 )]
position = Vector2( 684.983, 532.765 )
scale = Vector2( 0.204167, 0.204167 )

[node name="NoseBug" parent="PartyAudience" instance=ExtResource( 4 )]
position = Vector2( 202.165, 517.305 )

[node name="DoctorBug" parent="PartyAudience" instance=ExtResource( 6 )]
position = Vector2( 347.248, 562.495 )

[node name="Moskito" parent="PartyAudience" instance=ExtResource( 8 )]
position = Vector2( 550.603, 486.386 )

[node name="BugBunny" parent="PartyAudience" instance=ExtResource( 7 )]
position = Vector2( 63.028, 523.251 )

[node name="BugQueen" parent="PartyAudience" instance=ExtResource( 3 )]
position = Vector2( 844.337, 545.846 )

[node name="LightBug" parent="PartyAudience" instance=ExtResource( 9 )]
position = Vector2( 975.15, 541.089 )

[node name="Node2D" parent="PartyAudience" instance=ExtResource( 12 )]
position = Vector2( 647.71, 519.016 )
scale = Vector2( 0.259259, 0.28 )

[node name="BugAnt" parent="PartyAudience" instance=ExtResource( 14 )]
position = Vector2( 0, 554 )
scale = Vector2( 0.6, 0.6 )

[node name="BugCute" parent="PartyAudience" instance=ExtResource( 15 )]
position = Vector2( 854, 476 )
scale = Vector2( 0.581056, 0.581056 )

[node name="Vamp" parent="PartyAudience" instance=ExtResource( 16 )]
position = Vector2( 712, 528 )
scale = Vector2( 0.72, 0.72 )

[node name="CenterContainer" type="CenterContainer" parent="."]
margin_left = 0.533092
margin_top = -110.184
margin_right = 1035.54
margin_bottom = 491.816
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScoreTitle" type="Sprite" parent="CenterContainer"]
position = Vector2( 520.193, 183.384 )
scale = Vector2( 0.420778, 0.420778 )
texture = ExtResource( 13 )

[node name="VBoxContainer" type="VBoxContainer" parent="CenterContainer"]
margin_left = 467.0
margin_top = 230.0
margin_right = 567.0
margin_bottom = 371.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="CenterContainer/VBoxContainer"]
margin_right = 100.0
margin_bottom = 141.0
rect_min_size = Vector2( 100, 100 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 8 )
text = "0"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[node name="TextureButton" type="TextureButton" parent="."]
margin_right = 40.0
margin_bottom = 40.0
rect_scale = Vector2( 0.16, 0.16 )
texture_normal = ExtResource( 17 )
texture_pressed = ExtResource( 17 )
texture_hover = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BugbookEntry" parent="." instance=ExtResource( 19 )]
margin_left = 234.0
margin_top = 207.0
margin_right = 434.0
margin_bottom = 457.0
rect_rotation = -4.90819

[connection signal="pressed" from="TextureButton" to="." method="_on_TextureButton_pressed"]
